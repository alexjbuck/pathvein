name: Release
on:
  push:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
jobs:
  changesets:
    name: Changesets
    runs-on: ubuntu-latest
    environment: pypi
    outputs:
      should-deploy: ${{ steps.changesets.outputs.hasChangesets == 'false' }}
      version: ${{ steps.version.outputs.version }}
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          cache: yarn
          node-version-file: .node-version
      - name: Install Node.js dependencies
        run: yarn install
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6.2.0
        with:
          git_commit_gpgsign: true
          git_user_signingkey: true
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - name: Setup Git user
        run: |
          git config --global user.email alexjbuck@gmail.com
          git config --global user.name Alexander Buck
      - name: Build packages
        run: yarn run build
      - id: changesets
        name: Run Changesets â€” Create a Release Pull Request or merge a Release Pull Request
        uses: changesets/action@v1.4.9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: Release ðŸš€
          version: yarn run version
          commit: Release ðŸš€
          publish: yarn run publish
          setupGitUser: false
      - name: Get version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        if: steps.changesets.outputs.hasChangesets == 'false'
  
  create-release:
    needs: changesets
    if: needs.changesets.outputs.should-deploy == 'true'
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ needs.changesets.outputs.version }}
        run: |
          gh release create "v$VERSION" \
            --title "v$VERSION" \
            --generate-notes
